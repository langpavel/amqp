name: tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build:
    runs-on: ${{ matrix.os }}
    services:
      rabbitmq:
        image: rabbitmq:4-management
        ports:
          - 5671:5671
          - 5672:5672
          - 15672:15672
        volumes:
          - /etc/rabbitmq
          - /etc/ssl/certs/rabbitmq
        options: --name rabbitmq
    strategy:
      matrix:
        os: [ubuntu-latest]
        deno: [v2.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Mount RabbitMQ config files
        run: |
          docker cp ./test/conf/rabbitmq.conf rabbitmq:/etc/rabbitmq/rabbitmq.conf
          docker cp ./test/conf/enabled_plugins rabbitmq:/etc/rabbitmq/enabled_plugins
          docker cp ./test/cert/ca_certificate.pem rabbitmq:/etc/ssl/certs/rabbitmq/ca_certificate.pem
          docker cp ./test/cert/server_guest_certificate.pem rabbitmq:/etc/ssl/certs/rabbitmq/server_guest_certificate.pem
          docker cp ./test/cert/server_guest_key.pem rabbitmq:/etc/ssl/certs/rabbitmq/server_guest_key.pem
          docker restart rabbitmq
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno }}
      - name: Check formatting
        run: deno fmt --check
      - name: Lint
        run: deno lint src/ test/
      - name: Unit tests
        run: deno task test
      - name: Wait for RabbitMQ
        run: deno run --allow-net test/wait_for_server.ts
      - name: Module tests
        run: deno task test:mod
